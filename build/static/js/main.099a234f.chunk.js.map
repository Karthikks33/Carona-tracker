{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","components/CountryPicker/CountryPicker.jsx","Footer.jsx","App.js","index.js","App.module.css","components/Charts/Charts.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","cx","card","infected","xs","md","CardContent","Typography","color","gutterBottom","varaint","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableurl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","Styles","CountryPicker","handeleCountryChange","fetchedCountries","setFetchCountries","fetchCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","index","key","Footer","year","getFullYear","App","state","handleCountryChange","fetchedData","setState","this","src","coronaImage","image","alt","footer","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.099a234f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2kZoZ\",\"card\":\"Cards_card__3c6Gg\",\"infected\":\"Cards_infected__17NaW\",\"recovered\":\"Cards_recovered__58NkQ\",\"deaths\":\"Cards_deaths__1KQWg\"};","import React from \"react\";\r\n\r\nimport {Card, CardContent, Typography, Grid} from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\n\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\r\n    if(!confirmed){\r\n        return 'loading...';\r\n    }\r\n   \r\n    \r\n    return (\r\n        <div className= {styles.container}>\r\n            <Grid container spacing = {3} justify= \"center\">\r\n                <Grid item component= {Card} className={cx(styles.card, styles.infected)} xs={12} md={3}>\r\n                    <CardContent>\r\n                        <Typography color= \"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography varaint=\"h5\"> <CountUp start={0} end=  {confirmed.value} duration={2.5} separator=\",\"  /></Typography> \r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography varaint=\"body2\">No of Active COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component= {Card} className={cx(styles.card, styles.recovered)} xs={12} md={3}>\r\n                    <CardContent>\r\n                        <Typography color= \"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography varaint=\"h5\"><CountUp start={0} end=  {recovered.value} duration={2.5} separator=\",\"  /></Typography> \r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography varaint=\"body2\">No of Recovered COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component= {Card} className={cx(styles.card, styles.deaths)} xs={12} md={3}>\r\n                    <CardContent>\r\n                        <Typography color= \"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography varaint=\"h5\"><CountUp start={0} end=  {deaths.value} duration={2.5} separator=\",\"  /></Typography> \r\n                        <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography varaint=\"body2\">No of Deaths COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async(country) =>{\r\n\r\n    let changeableurl = url;\r\n\r\n    if(country){\r\n        changeableurl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n       \r\n    // 1.   Below method is conventional way\r\n        // const {data} = await axios.get(url);\r\n        // const reqData = {\r\n        //     confirmed : data.confirmed,\r\n        //     recovered: data.recovered,\r\n        //     deaths: data.deaths,\r\n        //     lastUpdate:data.lastUpdate\r\n        // };\r\n        // return reqData;\r\n        // 2. Below is short form \r\n        const {data :{confirmed, recovered, deaths, lastUpdate}} = await axios.get(changeableurl);\r\n\r\n        // no need to use a confirmed : data.confirmed(in above data is expaned), \r\n        //and confirmed :  confirmed is not assigned bec if name are same its not compul; \r\n\r\n        return {confirmed, recovered, deaths, lastUpdate};        \r\n    } catch (error) {\r\n        console.log(error);\r\n        \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () =>{\r\n    // wrong //const response = await axios.get('${url}/daily');\r\n    try{\r\n    const {data} = await axios.get(`${url}/daily`);\r\n    // console.log({data});\r\n        const modifiedData = data.map((dailyData) =>({\r\n            confirmed : dailyData.confirmed.total,\r\n            deaths    : dailyData.deaths.total,\r\n            date       : dailyData.reportDate,\r\n        }))\r\n    return  modifiedData ;\r\n}\r\ncatch(error){console.log(error);\r\n}\r\n}\r\n\r\nexport const countries = async () =>{\r\n    try {\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n\r\n   \r\n    return countries.map((country)=>country.name)\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n        \r\n    }\r\n    \r\n} ","import React, {useState, useEffect} from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport {Line, Bar} from \"react-chartjs-2\"\r\nimport Styles from \"./Charts.module.css\"\r\n\r\n\r\nconst Charts = ({data:{confirmed, recovered, deaths}, country})=>{\r\n   \r\n    const [dailyData, setDailyData] = useState({});\r\n    \r\n    useEffect (()=>{\r\n\r\n        const fetchAPI = async() => {\r\n            setDailyData( await fetchDailyData());\r\n        }\r\n        // console.log(dailyData);\r\n        fetchAPI();\r\n       \r\n        \r\n    },[setDailyData]);\r\n    \r\n    const lineChart = (\r\n        dailyData[0]\r\n         ? (\r\n          <Line \r\n          data = {\r\n              {\r\n                  labels : dailyData.map(({date}) => date),\r\n                    datasets: [{\r\n                    data: dailyData.map(({confirmed}) => confirmed),\r\n                    label:\"infected\",\r\n                    borderColor: \"#3333ff\",\r\n                    fill: true\r\n                }, {\r\n                    data: dailyData.map(({deaths}) => deaths),\r\n                    label:\"deaths\",\r\n                    borderColor: \"red\",\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill: true\r\n                }]\r\n              }\r\n          }  />) : null\r\n    );\r\n\r\n    const barChart =(\r\n        confirmed\r\n        ?(\r\n            <Bar \r\n            \r\n            data={{\r\n                labels:[\"infected\", \"recovered\", \"deaths\"],\r\n                datasets:[{\r\n                    label:\"People\",\r\n                    backgroundColor: ['rgba(0, 0, 255, 0.5)','rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                    data:[confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n               \r\n            }}\r\n            options={{\r\n                legend:{display:false},\r\n                title:{display:true, text:`Current status in ${country}`}\r\n            }}\r\n              />\r\n        ): null\r\n    );\r\n     \r\n          return(<div className={Styles.container}>\r\n            {country ? barChart : lineChart }\r\n          </div>);\r\n\r\n}\r\n\r\n\r\nexport default Charts;","import React, { useState, useEffect } from \"react\";\r\n import {NativeSelect, FormControl} from \"@material-ui/core\";\r\n\r\nimport Styles from \"./CountryPicker.module.css\"\r\nimport {countries} from \"../../api\";\r\n\r\nconst CountryPicker = ({handeleCountryChange})=>{\r\n\r\n    const [fetchedCountries, setFetchCountries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n    const fetchCountries = async () =>{\r\n        setFetchCountries(await countries());\r\n    }\r\n    fetchCountries();\r\n    \r\n    \r\n},[setFetchCountries]);\r\nconsole.log(fetchedCountries);\r\n\r\n\r\n    return (\r\n        <FormControl className={Styles.formControl}>\r\n            <NativeSelect defaultValue='' onChange={(e)=>handeleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, index) => <option key={index} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default CountryPicker;","import React from \"react\";\r\n\r\n\r\n\r\nfunction Footer() {\r\n  const year = new Date().getFullYear();\r\n  return (\r\n      \r\n    <footer >\r\n      <p>ⓒ SriMeenakshiTech {year}</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\n\r\n\r\nimport {Cards, Charts, CountryPicker} from \"./components\"\r\nimport styles from \"./App.module.css\";\r\nimport {fetchData } from \"./api\";\r\nimport coronaImage from \"./images/image.png\";\r\nimport Footer from \"./Footer\";\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        data:{},\r\n        country:''\r\n    }\r\n    async componentDidMount(){\r\n        const fetchedData = await fetchData();\r\n       this.setState ({data : fetchedData});\r\n           \r\n        \r\n    }\r\n\r\n    handleCountryChange = async(country)=>{\r\n\r\n        const fetchedData = await fetchData(country);\r\n\r\n        \r\n        \r\n        console.log(fetchedData);\r\n        this.setState ({data : fetchedData, country: country});\r\n        \r\n    }\r\n    render(){\r\n        const {data, country} = this.state;\r\n        console.log(data);\r\n        return (<div>\r\n            <div className={styles.container}>\r\n                <img src={coronaImage} className ={styles.image} alt=\"COVID-19\"></img>\r\n                     <Cards  data={data} />\r\n                     <CountryPicker handeleCountryChange={this.handleCountryChange}  />\r\n                     <Charts   data={data} country={country}/>\r\n                     \r\n                   \r\n            </div>\r\n            <div className= {styles.footer}>\r\n             <Footer  /></div></div>)\r\n    }\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDom.render(<App  /> , document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3-6Mq\",\"image\":\"App_image__Pwjo8\",\"footer\":\"App_footer__2-iv1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__18drU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3Llam\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}